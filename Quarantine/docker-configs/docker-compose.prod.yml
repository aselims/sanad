version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "80"
    restart: unless-stopped
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sanad_network
    environment:
      - VIRTUAL_HOST=${DOMAIN:-collopi.com}
      - CORS_ORIGIN=https://${DOMAIN:-collopi.com}

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://${DB_USERNAME:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_DATABASE:-sanad}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1d}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CORS_ORIGIN=${CORS_ORIGIN:-https://${DOMAIN:-collopi.com}}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - FRONTEND_URL=https://${DOMAIN:-collopi.com}
    volumes:
      - backend_uploads:/app/uploads
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sanad_network

  postgres:
    image: postgres:14-alpine
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_DATABASE:-sanad}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sanad_network

volumes:
  postgres_data:
  backend_uploads:

networks:
  sanad_network:
    driver: bridge 