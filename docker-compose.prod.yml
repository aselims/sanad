version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - t3awanu-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_DATABASE=${DB_DATABASE:-sanad_db}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_change_in_production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1d}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - backend_uploads:/app/uploads
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - t3awanu-network

  postgres:
    image: postgres:14-alpine
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_DATABASE:-sanad_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - t3awanu-network

volumes:
  postgres_data:
  backend_uploads:

networks:
  t3awanu-network:
    driver: bridge 