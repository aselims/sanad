name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Docker and configure sudo
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # Check if Docker is installed
          if ! command -v docker &> /dev/null; then
            # Install Docker
            curl -fsSL https://get.docker.com -o get-docker.sh
            chmod +x get-docker.sh
            bash get-docker.sh
          fi

          # Check if Docker Compose is installed
          if ! command -v docker-compose &> /dev/null; then
            # Install Docker Compose
            sudo apt update
            sudo apt install -y docker-compose
          fi

          # Add user to docker group if not already
          if ! groups | grep -q docker; then
            sudo usermod -aG docker $USER
            echo "Added user to docker group. This will take effect after next login."
          fi
          
          # Configure passwordless sudo for docker and docker-compose
          echo "Configuring passwordless sudo for docker commands..."
          sudo tee /etc/sudoers.d/docker-commands > /dev/null << EOL
          $USER ALL=(ALL) NOPASSWD: /usr/bin/docker, /usr/bin/docker-compose
          EOL
          sudo chmod 440 /etc/sudoers.d/docker-commands
          
          # Install Apache2 if not already installed
          if ! command -v apache2ctl &> /dev/null; then
            sudo apt update
            sudo apt install -y apache2
          fi
          
          # Enable necessary Apache modules
          sudo a2enmod proxy proxy_http proxy_wstunnel ssl rewrite
    
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          mkdir -p ~/sanad
          cd ~/sanad
          
          # Clone or update repository
          if [ -d ".git" ]; then
            git fetch origin main
            git reset --hard origin/main
          else
            git init
            git remote add origin https://github.com/aselims/sanad.git
            git fetch origin main
            git reset --hard origin/main
          fi
          
          # Create .env file with secrets
          cat > .env << EOL
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          POSTGRES_USER=postgres
          POSTGRES_PASSWORD=postgres
          POSTGRES_DB=sanad
          EOL
          
          # Run docker commands with sudo
          sudo docker-compose -f docker-compose.dev.yml up -d --build
          
          # Configure Apache Virtual Host for reverse proxy
          sudo tee /etc/apache2/sites-available/sanad.conf > /dev/null << EOL
          <VirtualHost *:80>
              ServerName sanad.selimsalman.de
              
              # Redirect HTTP to HTTPS
              RewriteEngine On
              RewriteCond %{HTTPS} off
              RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
          </VirtualHost>
          
          <VirtualHost *:443>
              ServerName sanad.selimsalman.de
              
              # SSL Configuration
              SSLEngine on
              SSLCertificateFile /etc/letsencrypt/live/sanad.selimsalman.de/fullchain.pem
              SSLCertificateKeyFile /etc/letsencrypt/live/sanad.selimsalman.de/privkey.pem
              
              # Frontend proxy
              ProxyPreserveHost On
              ProxyPass / http://localhost:8081/
              ProxyPassReverse / http://localhost:8081/
              
              # API proxy
              ProxyPass /api http://localhost:3001/
              ProxyPassReverse /api http://localhost:3001/
              
              # WebSocket support
              RewriteEngine On
              RewriteCond %{HTTP:Upgrade} =websocket [NC]
              RewriteRule /(.*)  ws://localhost:8081/$1 [P,L]
              
              ErrorLog \${APACHE_LOG_DIR}/sanad-error.log
              CustomLog \${APACHE_LOG_DIR}/sanad-access.log combined
          </VirtualHost>
          EOL
          
          # Enable site and reload Apache
          sudo a2ensite sanad.conf
          sudo systemctl reload apache2
          
          # Setup Certbot for SSL if certificates don't exist
          if [ ! -d "/etc/letsencrypt/live/sanad.selimsalman.de" ]; then
            # Install certbot if not available
            if ! command -v certbot &> /dev/null; then
              sudo apt update
              sudo apt install -y certbot python3-certbot-apache
            fi
            
            # Get SSL certificate
            sudo certbot --apache -d sanad.selimsalman.de --non-interactive --agree-tos --email admin@selimsalman.de
            
            # Reload Apache after certificate installation
            sudo systemctl reload apache2
          fi
          
          echo "Deployment complete. Site is available at https://sanad.selimsalman.de"
