name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install root dependencies
        run: npm ci
        
      - name: Install backend dependencies
        run: cd backend && npm ci
        
      - name: Install frontend dependencies
        run: cd frontend && npm ci
        
      - name: Run backend linting
        run: cd backend && npm run lint
        
      - name: Run frontend linting
        run: cd frontend && npm run lint
        
      - name: Check backend formatting
        run: cd backend && npm run format:check
        
      - name: Check frontend formatting
        run: cd frontend && npm run format:check

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sanad_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install backend dependencies
        run: cd backend && npm ci
        
      - name: Run backend tests
        run: cd backend && npm test
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_DATABASE: sanad_test
          JWT_SECRET: test-secret

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install frontend dependencies
        run: cd frontend && npm ci
        
      - name: Run frontend tests
        run: cd frontend && npm test -- --coverage --watchAll=false
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./frontend/coverage/lcov.info
          flags: frontend

  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: [lint-and-format, backend-tests, frontend-tests]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm run install:all
        
      - name: Build backend
        run: cd backend && npm run build
        
      - name: Build frontend
        run: cd frontend && npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: |
            backend/dist/
            frontend/dist/